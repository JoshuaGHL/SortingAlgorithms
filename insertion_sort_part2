# Program Name: insertion_sort_part2.py
# Course: CSE2300/Section W02
# Student Name: Joshua Little
# Assignment: Project
# Due Date: 07/23/2023

# Importing modules that will be used in program.
import random
import time

# Getting user input for numbers.
n=int(input("Input one number: "))
# Initiating running_time to 0.
running_time = 0

# Defining arrays.
array1 = []
dict_arrays = {}
time_array = []

# Function to sort array using input array.
def insertion_sort(arrayinput):
    # Looping from 1 to the length of the array.
    for i in range(1, len(arrayinput)):
        # Create a variable equal to the input number.
        sort = arrayinput[i]
        # Create another variable equal to input number - 1.
        temp = i - 1
        # While loop to sort the array.
        while temp >= 0 and arrayinput[temp] > sort:
            arrayinput[temp + 1] = arrayinput[temp]
            temp -= 1
        # Putting the sorted array in a variable.
        arrayinput[temp + 1] = sort
        
for i in range(8000):
    # Creating an array of random integers between 1 and 50000 based on user input number.
    array1 = [random.randint(1, 50000) for i in range(n)]
    # Obtaining the time before running the sorting algorithm.
    start_time = time.time()
    # Sending the unsorted array to the sorting algorithm to be sorted.
    insertion_sort(array1)
    # Obtaining the time after running the sorting algorithm.
    end_time = time.time()
    # Storing the time of a single array being sorted in a variable.
    result = end_time-start_time
    # Storing all times of every array being sorted in an array.
    time_array.append(result)

# Calculating total time of sorting algorithm by adding together the time of every individual sort.        
total = sum(time_array)
# Calculating average time of a sort by dividing the total time taken by the number of times the sorting algorithm was ran.
average_time = total/8000

print("Number of items sorted:", n*8000)
print("Average running time for each array:", average_time, "seconds")